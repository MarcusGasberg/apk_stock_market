@startuml StockMarket Class Diagram
skinparam Monochrome true
skinparam Shadowing false

note as N1
  # namespaces
  # stl containers
  # stl iterators
  # stl algorithms
  # boost signal2
  # std::bind
  # std::function
  # std::variant
  # exceptions
  # compile time if
  # literals
  # moving
  # promises and futures
  # threading
  # variadics
  # metaprogramming
  # memory mapped registers
  # PMR
end note


note as N2
  Threading do/undo variadaic operations
end note

class TraderClient {

}

class StockBroker {
  - vector<IStockTradeCommand> stockTrades
  + place_trade(StockTradeCommand command): void
  + list_trades(): void
} 

class StockTrade {
  + buy()
  + sell()
}

class IStockTradeCommand {
  + get_buyer_id(): string
  + get_stock_id(): string
  + get_stock_trade(): StockTrade
  + get_command_type(): CommandType
  + execute(): void
  + undo(): void
}

enum CommandType {
  + Sell
  + Buy
}

class BuyStockCommand {
  - StockTrade trade
  - string buyer_id
  - string stock_id
  - CommandType type
  + get_buyer_id(): string
  + get_stock_id(): string
  + get_command_type(): CommandType
  + execute(): void
  + undo(): void
}
class SellStockCommand {
  - StockTrade trade
  - string buyer_id
  - string stock_id
  - CommandType type
  + get_buyer_id(): string
  + get_stock_id(): string
  + get_command_type(): CommandType
  + execute(): void
  + undo(): void
}

class StockProvider {
  - Stock[] stocks_for_sale
  - Stock[] stock_buy_requests
  + list_stocks_for_sale(): void
  + list_stock_buy_requests(): void
}

class StockUpdater {
  - Stock[] stocks
  - boost::signal on_stock_updates
  + register_on_stock_update(std::function)
}

class AccountManager {
  - TraderAccount[] traderAccounts
  + get_account(string id): TraderAccount
}

class TraderAccount {
  - string id
  - Stock[] stocks
}

class Stock {
  - string seller_id
  - int value_each
  - int amount
}

IStockTradeCommand --* CommandType
IStockTradeCommand <|-- BuyStockCommand
IStockTradeCommand <|-- SellStockCommand
IStockTradeCommand --> StockTrade

StockBroker --o IStockTradeCommandList
IStockTradeCommandList --o IStockTradeCommand
TraderClient --> StockBroker

TraderClient --> StockProvider
StockProvider --> StockUpdater

StockTrade --> TraderAccount

AccountManager --o TraderAccount
TraderAccount --o Stock
StockBroker --> AccountManager

@enduml